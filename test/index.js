const co = require('co');
const xtpl = require('xtpl');
const fs = require('fs');
const thunkify = require('thunkify');
const path = require('path');
const prettier = require('prettier');
const { NodeVM } = require('vm2');
const _ = require('lodash');
const data = require('./data');

const vm = new NodeVM({
  console: 'inherit',
  sandbox: {}
});

const componentsMap = {"list":[{"name":"Select","title":"选择器","screenshot":null,"icon":null,"tags":null,"package":null,"destructuring":null,"main":null,"description":null,"dependence":"{\"package\": \"ant-design-vue\", \"export_name\" : \"Select\", \"sub_name\": \"\", \"destructuring\": 1, \"main\": \"\"}","props":"[{\"name\":\"dataSource\",\"label\":\"下拉选项\",\"type\":\"Mixin\",\"props\":{\"types\":[\"List\",\"MonacoEditor\",\"Expression\"],\"defaultType\":\"List\",\"listProps\":{\"type\":\"button\",\"objectButtonProps\":{\"width\":800},\"items\":[{\"name\":\"label\",\"title\":\"选项标签名\",\"children\":[{\"componentName\":\"Input\",\"props\":{\"placeholder\":\"请输入选项标签名\"}}]},{\"name\":\"value\",\"title\":\"选项值\",\"children\":[{\"componentName\":\"Input\",\"props\":{\"placeholder\":\"请输入选项值\"}}]},{\"name\":\"disabled\",\"title\":\"是否禁用\",\"children\":[{\"componentName\":\"Switch\",\"props\":{}}]}]},\"monacoEditorProps\":{\"type\":\"button\",\"language\":\"object\",\"placeholder\":\"[\\n\\t\\n]\"}},\"formItemProps\":\"\",\"description\":\"传入的数据源，可以动态渲染子项，详见 [dataSource的使用](#dataSource的使用)\",\"category\":\"基础属性\"},{\"name\":\"value\",\"label\":\"固定值\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Input\",\"Expression\"],\"defaultType\":\"Input\",\"inputProps\":{\"placeholder\":\"固定值，受控模式\"}},\"formItemProps\":{},\"description\":\"当前值，用于受控模式\",\"category\":\"基础属性\"},{\"name\":\"defaultValue\",\"label\":\"默认值\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Input\",\"Expression\"],\"defaultType\":\"Input\",\"inputProps\":{\"placeholder\":\"初始值，非受控模式\"}},\"formItemProps\":{},\"description\":\"初始的默认值\",\"category\":\"基础属性\"},{\"name\":\"placeholder\",\"label\":\"占位提示\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Input\",\"Expression\"],\"defaultType\":\"Input\",\"inputProps\":{\"placeholder\":\"占位提示的文案\"}},\"formItemProps\":\"\",\"description\":\"没有值的时候的占位符\",\"category\":\"基础属性\"},{\"name\":\"mode\",\"label\":\"选择模式\",\"type\":\"Mixin\",\"props\":{\"types\":[\"RadioGroup\",\"Expression\"],\"defaultType\":\"RadioGroup\",\"radioGroupProps\":{\"shape\":\"button\",\"dataSource\":[{\"label\":\"单选\",\"value\":\"single\"},{\"label\":\"多选\",\"value\":\"multiple\"},{\"label\":\"标签\",\"value\":\"tag\"}]}},\"formItemProps\":\"\",\"description\":\"选择器模式\",\"category\":\"基础属性\"},{\"name\":\"size\",\"label\":\"尺寸大小\",\"type\":\"Mixin\",\"props\":{\"types\":[\"RadioGroup\",\"Expression\"],\"defaultType\":\"RadioGroup\",\"radioGroupProps\":{\"shape\":\"button\",\"dataSource\":[{\"label\":\"小\",\"value\":\"small\"},{\"label\":\"中\",\"value\":\"medium\"},{\"label\":\"大\",\"value\":\"large\"}]}},\"formItemProps\":\"\",\"description\":\"选择器尺寸\",\"category\":\"基础属性\"},{\"name\":\"autoWidth\",\"label\":\"下拉同宽\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":{\"initValue\":true},\"description\":\"下拉菜单是否与选择器对齐\",\"category\":\"基础属性\"},{\"name\":\"hasClear\",\"label\":\"支持清除\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"是否有清除按钮（单选模式有效）\",\"category\":\"基础属性\"},{\"name\":\"showSearch\",\"label\":\"支持搜索\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"展开后是否能搜索（tag 模式下固定为true）\",\"category\":\"基础属性\"},{\"name\":\"hasSelectAll\",\"label\":\"支持全选\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"多选模式下是否有全选功能\",\"category\":\"基础属性\"},{\"name\":\"readOnly\",\"label\":\"只读\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"是否只读，只读模式下可以展开弹层但不能选\",\"category\":\"基础属性\"},{\"name\":\"disabled\",\"label\":\"禁用\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"是否禁用选择器\",\"category\":\"基础属性\"},{\"name\":\"hasBorder\",\"label\":\"边框\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":{\"initValue\":true},\"description\":\"是否有边框\",\"category\":\"基础属性\"},{\"name\":\"popupClassName\",\"label\":\"弹层类\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Input\",\"Expression\"],\"defaultType\":\"Input\",\"inputProps\":{\"placeholder\":\"添加弹层class类名\"}},\"formItemProps\":\"\",\"description\":\"弹层的 className\",\"category\":\"常用属性\"},{\"name\":\"popupContent\",\"label\":\"弹层内容\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Expression\",\"ReactNode\"],\"defaultType\":\"ReactNode\"},\"formItemProps\":\"\",\"description\":\"自定义弹层的内容\",\"category\":\"常用属性\"},{\"name\":\"popupStyle\",\"label\":\"弹层样式\",\"type\":\"Mixin\",\"props\":{\"types\":[\"MonacoEditor\",\"Expression\"],\"defaultType\":\"MonacoEditor\",\"monacoEditorProps\":{\"type\":\"button\",\"language\":\"json\",\"placeholder\":\"{\\n\\t\\n}\"}},\"formItemProps\":\"\",\"description\":\"弹层的内联样式\",\"category\":\"常用属性\"},{\"name\":\"popupProps\",\"label\":\"弹层属性\",\"type\":\"Mixin\",\"props\":{\"types\":[\"MonacoEditor\",\"Expression\"],\"defaultType\":\"MonacoEditor\",\"monacoEditorProps\":{\"type\":\"button\",\"language\":\"object\"}},\"formItemProps\":\"\",\"description\":\"添加到弹层上的属性\",\"category\":\"常用属性\"},{\"name\":\"state\",\"label\":\"校验状态\",\"type\":\"Mixin\",\"props\":{\"types\":[\"RadioGroup\",\"Expression\"],\"defaultType\":\"RadioGroup\",\"radioGroupProps\":{\"shape\":\"button\",\"dataSource\":[{\"label\":\"默认\",\"value\":\"\"},{\"label\":\"错误\",\"value\":\"error\"},{\"label\":\"加载中\",\"value\":\"loading\"}]}},\"formItemProps\":\"\",\"description\":\"校验状态\",\"category\":\"常用属性\"},{\"name\":\"popupContainer\",\"label\":\"容器节点\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Input\",\"Expression\"],\"defaultType\":\"Input\",\"inputProps\":{\"placeholder\":\"弹层挂载的容器节点\"}},\"formItemProps\":\"\",\"description\":\"弹层挂载的容器节点\",\"category\":\"常用属性\"},{\"name\":\"notFoundContent\",\"label\":\"为空文案\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Input\",\"Expression\",\"ReactNode\"],\"defaultType\":\"Input\",\"inputProps\":{\"placeholder\":\"弹层内容为空的文案\"}},\"formItemProps\":\"\",\"description\":\"弹层内容为空的文案\",\"category\":\"常用属性\"},{\"name\":\"fillProps\",\"label\":\"填充项\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Input\",\"Expression\"],\"defaultType\":\"Input\",\"inputProps\":{\"placeholder\":\"自定义取值的key\"}},\"formItemProps\":\"\",\"description\":\"填充到选择框里的值的 key\\b\\b\",\"category\":\"常用属性\"},{\"name\":\"searchValue\",\"label\":\"受控搜索\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Input\",\"Expression\"],\"defaultType\":\"Input\",\"inputProps\":{\"placeholder\":\"受控搜索值，一般不设置\"}},\"formItemProps\":\"\",\"description\":\"受控搜索值，一般不需要设置\",\"category\":\"常用属性\"},{\"name\":\"maxTagCount\",\"label\":\"最多标签\",\"type\":\"Mixin\",\"props\":{\"types\":[\"NumberPicker\",\"Expression\"],\"defaultType\":\"NumberPicker\"},\"formItemProps\":\"\",\"description\":\"最多显示多少个 tag\",\"category\":\"常用属性\"},{\"name\":\"visible\",\"label\":\"显示弹层\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"当前弹层是否显示\",\"category\":\"常用属性\"},{\"name\":\"defaultVisible\",\"label\":\"默认显示\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"弹层初始化是否显示\",\"category\":\"常用属性\"},{\"name\":\"followTrigger\",\"label\":\"跟随滚动\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"是否跟随滚动\",\"category\":\"常用属性\"},{\"name\":\"filterLocal\",\"label\":\"本地过滤\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"是否使用本地过滤，在数据源为远程的时候需要关闭此项\",\"category\":\"常用属性\"},{\"name\":\"useVirtual\",\"label\":\"虚拟滚动\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"是否开启虚拟滚动模式\",\"category\":\"常用属性\"},{\"name\":\"hasArrow\",\"label\":\"下拉箭头\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"是否有下拉箭头\",\"category\":\"常用属性\"},{\"name\":\"useDetailValue\",\"label\":\"使用详情\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"onChange 返回的 value 使用 dataSource 的对象\",\"category\":\"常用属性\"},{\"name\":\"cacheValue\",\"label\":\"保留已选\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"dataSource 变化的时是否保留已选的内容\",\"category\":\"常用属性\"},{\"name\":\"tagInline\",\"label\":\"一行显示\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"是否一行显示，仅在 mode 为 multiple 的时候生效\",\"category\":\"常用属性\"},{\"name\":\"hiddenSelected\",\"label\":\"隐藏菜单\",\"type\":\"Mixin\",\"props\":{\"types\":[\"Switch\",\"Expression\"],\"defaultType\":\"Switch\"},\"formItemProps\":\"\",\"description\":\"选择后是否立即隐藏菜单 (mode=multiple/tag 模式生效)\",\"category\":\"常用属性\"},{\"name\":\"onVisibleChange\",\"label\":\"弹层显示或隐藏时触发的回调\",\"type\":\"Function\",\"props\":{\"defaultValue\":function onVisibleChange(visible,type) { \n    //弹层显示或隐藏时触发的回调\n    //@param {Boolean} visible 弹层是否显示\n    //@param {String} type 触发弹层显示或隐藏的来源 fromContent 表示由Dropdown内容触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发\n    \n    \n  }},\"formItemProps\":\"\",\"description\":\"弹层显示或隐藏时触发的回调\",\"category\":\"函数属性\"},{\"name\":\"filter\",\"label\":\"本地过滤方法，返回一个 Boolean 值确定是否保留\",\"type\":\"Function\",\"props\":{\"defaultValue\":function filter() { \n    //本地过滤方法，返回一个 Boolean 值确定是否保留\n  \n    \n  }},\"formItemProps\":\"\",\"description\":\"本地过滤方法，返回一个 Boolean 值确定是否保留\",\"category\":\"函数属性\"},{\"name\":\"onToggleHighlightItem\",\"label\":\"键盘上下键切换菜单高亮选项的回调\",\"type\":\"Function\",\"props\":{\"defaultValue\":function onToggleHighlightItem() { \n    //键盘上下键切换菜单高亮选项的回调\n    \n    \n  }},\"formItemProps\":\"\",\"description\":\"键盘上下键切换菜单高亮选项的回调\",\"category\":\"函数属性\"},{\"name\":\"itemRender\",\"label\":\"渲染 MenuItem 内容的方法\",\"type\":\"Function\",\"props\":{\"defaultValue\":function itemRender(item,searchValue) { \n    //渲染 MenuItem 内容的方法\n    //@param {Object} item 渲染节点的item\n    //@param {String} searchValue 搜索关键字（如果开启搜索）\n    //@return {ReactNode} item node\n    \n    \n  }},\"formItemProps\":\"\",\"description\":\"渲染 MenuItem 内容的方法\",\"category\":\"函数属性\"},{\"name\":\"onChange\",\"label\":\"Select发生改变时触发的回调\",\"type\":\"Function\",\"props\":{\"defaultValue\":function onChange(value,actionType,item) { \n    //Select发生改变时触发的回调\n    //@param {*} value 选中的值\n    //@param {String} actionType 触发的方式, 'itemClick', 'enter', 'tag'\n    //@param {*} item 选中的值的对象数据 (useDetailValue=false有效)\n    \n    \n  }},\"formItemProps\":\"\",\"description\":\"Select发生改变时触发的回调\",\"category\":\"函数属性\"},{\"name\":\"onSearch\",\"label\":\"当搜索框值变化时回调\",\"type\":\"Function\",\"props\":{\"defaultValue\":function onSearch(value) { \n    //当搜索框值变化时回调\n    //@param {String} value 数据\n    \n    \n  }},\"formItemProps\":\"\",\"description\":\"当搜索框值变化时回调\",\"category\":\"函数属性\"},{\"name\":\"onSearchClear\",\"label\":\"当搜索框值被清空时候的回调\",\"type\":\"Function\",\"props\":{\"defaultValue\":function onSearchClear(actionType) { \n    //当搜索框值被清空时候的回调\n    //@param {String} actionType 触发的方式, 'select'(选择清空), 'popupClose'(弹窗关闭清空)\n    \n    \n  }},\"formItemProps\":\"\",\"description\":\"当搜索框值被清空时候的回调\",\"category\":\"函数属性\"},{\"name\":\"valueRender\",\"label\":\"渲染 Select 展现内容的方法\",\"type\":\"Function\",\"props\":{\"defaultValue\":function valueRender(item) { \n    //渲染 Select 展现内容的方法\n    //@param {Object} item 渲染节点的item\n    //@return {ReactNode} 展现内容\n    //@default item => item.label \\\\|\\\\| item.value\n    \n    \n  }},\"formItemProps\":\"\",\"description\":\"渲染 Select 展现内容的方法\",\"category\":\"函数属性\"},{\"name\":\"maxTagPlaceholder\",\"label\":\"隐藏多余 tag 时显示的内容，在 maxTagCount 生效时起作用\",\"type\":\"Function\",\"props\":{\"defaultValue\":function maxTagPlaceholder(selectedValues,totalValues) { \n    //隐藏多余 tag 时显示的内容，在 maxTagCount 生效时起作用\n    //@param {number} selectedValues 当前已选中的元素\n    //@param {number} totalValues 总待选元素\n    \n    \n  }},\"formItemProps\":\"\",\"description\":\"隐藏多余 tag 时显示的内容，在 maxTagCount 生效时起作用\",\"category\":\"函数属性\"},{\"name\":\"onRemove\",\"label\":\"tag 删除回调\",\"type\":\"Function\",\"props\":{\"defaultValue\":function onRemove(item) { \n    //tag 删除回调\n    //@param {object} item 渲染节点的item\n    \n    \n  }},\"formItemProps\":\"\",\"description\":\"tag 删除回调\",\"category\":\"函数属性\"},{\"name\":\"onFocus\",\"label\":\"焦点事件\",\"type\":\"Function\",\"props\":{\"defaultValue\":function onFocus() { \n    //焦点事件\n  \n    \n  }},\"formItemProps\":\"\",\"description\":\"焦点事件\",\"category\":\"函数属性\"},{\"name\":\"onBlur\",\"label\":\"失去焦点事件\",\"type\":\"Function\",\"props\":{\"defaultValue\":function onBlur() { \n    //失去焦点事件\n  \n    \n  }},\"formItemProps\":\"\",\"description\":\"失去焦点事件\",\"category\":\"函数属性\"}]","version":"1.19.5","code":"","basicId":232,"versionId":1280,"isContainer":0,"isLayout":0,"parentRule":null,"childrenRule":null,"remarkProp":null,"exportName":null,"subName":null,"isShow":1,"siteId":1,"devMode":1,"isOpen":0,"docLink":"//mc-fusion.alibaba-inc.com/demos/comp_groups/@alife/next@1.17.12/select?theme=@alife/theme-2@0.1.4&bgColor=%23ffffff","docDetail":null,"dependenceVersion":"1.19.5","items":[]}],"appList":[]}

co(function*() {
  const xtplRender = thunkify(xtpl.render);
  const code = fs.readFileSync(
    path.resolve(__dirname, '../src/index.js'),
    'utf8'
  );
  const renderInfo = vm.run(code)(data, {
    prettier: prettier,
    _: _,
    responsive: {
      width: 750,
      viewportWidth: 375
    },
    utils: {
      print: function(value) {
        console.log(value);
      }
    },
    componentsMap: componentsMap
  });

  if (renderInfo.noTemplate) {
    renderInfo.panelDisplay.forEach((file) => {
      fs.writeFileSync(path.join(__dirname, `../code/${file.panelName}`), file.panelValue);
    });
  } else {
    const renderData = renderInfo.renderData;
    const ret = yield xtplRender(
      path.resolve(__dirname, '../src/template.xtpl'),
      renderData,
      {}
    );

    const prettierOpt = renderInfo.prettierOpt || {
      parser: 'vue',
      printWidth: 80,
      singleQuote: true
    };

    const prettierRes = prettier.format(ret, prettierOpt);

    fs.writeFileSync(path.join(__dirname,'../code/result.vue'), prettierRes);
  }
});
